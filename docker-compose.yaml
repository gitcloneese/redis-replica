version: "3.0"      # docker-compose的版本号

networks: #网络配置
  redis-sentinel-1:
    driver: bridge

services: #所有服务的入口  固定写法
  redis-master: #自定义服务名
    image: redis:6.2.7           #我们所需要运行的镜像，没有的话，会自定为我们下载
    container_name: redis-master  #镜像运行后的容器名，自定义
    ports:
      - "6379:6379"           #宿主机的6379映射容器内部的6379端口
    volumes: #目录挂载分号 ： 右边代表容器内部的目录，分号左边表示宿主机的目录，
      - ./redis-master/redis.conf:/etc/redis/redis.conf
      - ./redis-master/data:/data
    command: bash -c "redis-server /etc/redis/redis.conf"  #容器启动后，运行的命令
    networks:
      - redis-sentinel-1

  redis-slave-1:
    image: redis:6.2.7
    container_name: redis-slave-1
    ports:
      - "6380:6380"
    volumes:
      - ./redis-slave1/redis.conf:/etc/redis/redis.conf
      - ./redis-slave1/data:/data
    # 从主节点同步数据到从节点
    # 下面的ip修改为宿主机的ip
    command: bash -c "redis-server /etc/redis/redis.conf  --slaveof 172.30.208.1 6379"
    depends_on:
      - redis-master
    networks:
      - redis-sentinel-1

  redis-slave-2:
    image: redis:6.2.7
    container_name: redis-slave-2
    ports:
      - "6381:6381"
    volumes:
      - ./redis-slave2/redis.conf:/etc/redis/redis.conf
      - ./redis-slave2/data:/data
    command: bash -c "redis-server /etc/redis/redis.conf --slaveof 172.30.208.1 6379"
    depends_on:
      - redis-master
    networks:
      - redis-sentinel-1